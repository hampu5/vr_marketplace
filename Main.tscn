[gd_scene load_steps=47 format=2]

[ext_resource path="res://LoginButton.gd" type="Script" id=1]
[ext_resource path="res://App.gd" type="Script" id=2]
[ext_resource path="res://HomeButton.gd" type="Script" id=3]
[ext_resource path="res://App2.gd" type="Script" id=4]
[ext_resource path="res://HandButton.gd" type="Script" id=5]

[sub_resource type="GDScript" id=31]
script/source = "extends Spatial
 
var webxr_interface
var vr_supported = false
 
func _ready() -> void:
	$Button.connect(\"pressed\", self, \"_on_Button_pressed\")
 
	webxr_interface = ARVRServer.find_interface(\"WebXR\")
	if webxr_interface:
		# WebXR uses a lot of asynchronous callbacks, so we connect to various
		# signals in order to receive them.
		webxr_interface.connect(\"session_supported\", self, \"_webxr_session_supported\")
		webxr_interface.connect(\"session_started\", self, \"_webxr_session_started\")
		webxr_interface.connect(\"session_ended\", self, \"_webxr_session_ended\")
		webxr_interface.connect(\"session_failed\", self, \"_webxr_session_failed\")
 
		webxr_interface.connect(\"select\", self, \"_webxr_on_select\")
		webxr_interface.connect(\"selectstart\", self, \"_webxr_on_select_start\")
		webxr_interface.connect(\"selectend\", self, \"_webxr_on_select_end\")
 
		webxr_interface.connect(\"squeeze\", self, \"_webxr_on_squeeze\")
		webxr_interface.connect(\"squeezestart\", self, \"_webxr_on_squeeze_start\")
		webxr_interface.connect(\"squeezeend\", self, \"_webxr_on_squeeze_end\")
 
		# This returns immediately - our _webxr_session_supported() method 
		# (which we connected to the \"session_supported\" signal above) will
		# be called sometime later to let us know if it's supported or not.
		webxr_interface.is_session_supported(\"immersive-vr\")
 
	$ARVROrigin/LeftController.connect(\"button_pressed\", self, \"_on_LeftController_button_pressed\")
	$ARVROrigin/LeftController.connect(\"button_release\", self, \"_on_LeftController_button_release\")
	
	$ARVROrigin/RightController.connect(\"button_pressed\", self, \"_on_RightController_button_pressed\")
	$ARVROrigin/RightController.connect(\"button_release\", self, \"_on_RightController_button_release\")
	
	$LoginScreen/LoginButton.connect(\"login_button\", self, \"_on_LoginButton_login_button\")
	
	$Browser/App.connect(\"enter_app\", self, \"_on_App_enter_app\")
	$Browser/App2.connect(\"enter_app\", self, \"_on_App2_enter_app\")
	
	$ToolBar/HomeButton.connect(\"home_button\", self, \"_on_ToolBar_home_button\")
	
	$ARVROrigin/LeftController/HandButton.connect(\"hand_button\", self, \"_on_HandButton_hand_button\")
 
func _webxr_session_supported(session_mode: String, supported: bool) -> void:
	if session_mode == 'immersive-vr':
		vr_supported = supported
 
func _on_Button_pressed() -> void:
	#OS.shell_open(\"http://www.google.com/\")
	if not vr_supported:
		OS.alert(\"Your browser doesn't support VR\")
		return
 
	# We want an immersive VR session, as opposed to AR ('immersive-ar') or a
	# simple 3DoF viewer ('viewer').
	webxr_interface.session_mode = 'immersive-vr'
	# 'bounded-floor' is room scale, 'local-floor' is a standing or sitting
	# experience (it puts you 1.6m above the ground if you have 3DoF headset),
	# whereas as 'local' puts you down at the ARVROrigin.
	# This list means it'll first try to request 'bounded-floor', then 
	# fallback on 'local-floor' and ultimately 'local', if nothing else is
	# supported.
	webxr_interface.requested_reference_space_types = 'bounded-floor, local-floor, local'
	# In order to use 'local-floor' or 'bounded-floor' we must also
	# mark the features as required or optional.
	webxr_interface.required_features = 'local-floor'
	webxr_interface.optional_features = 'bounded-floor'
 
	# This will return false if we're unable to even request the session,
	# however, it can still fail asynchronously later in the process, so we
	# only know if it's really succeeded or failed when our 
	# _webxr_session_started() or _webxr_session_failed() methods are called.
	if not webxr_interface.initialize():
		OS.alert(\"Failed to initialize\")
		return
 
func _webxr_session_started() -> void:
	$Button.visible = false
	# This tells Godot to start rendering to the headset.
	get_viewport().arvr = true
	# This will be the reference space type you ultimately got, out of the
	# types that you requested above. This is useful if you want the game to
	# work a little differently in 'bounded-floor' versus 'local-floor'.
	print (\"Reference space type: \" + webxr_interface.reference_space_type)
 
func _webxr_session_ended() -> void:
	$Button.visible = true
	# If the user exits immersive mode, then we tell Godot to render to the web
	# page again.
	get_viewport().arvr = false
 
func _webxr_session_failed(message: String) -> void:
	OS.alert(\"Failed to initialize: \" + message)
 

func _on_LeftController_button_pressed(button: int) -> void:
	print (\"Button pressed: \" + str(button))
	
	$ARVROrigin/LeftController/RayCast/MeshInstance.mesh.material.albedo_color = Color.black
	
	if $ARVROrigin/LeftController/RayCast.is_colliding():
		$ARVROrigin/LeftController/RayCast/MeshInstance.mesh.material.albedo_color = Color.yellow
		var colliding_object = $ARVROrigin/LeftController/RayCast.get_collider() # Gets the correct object
		
		colliding_object.is_clicked()
 
func _on_LeftController_button_release(button: int) -> void:
	print (\"Button release: \" + str(button))
	$ARVROrigin/LeftController/RayCast/MeshInstance.mesh.material.albedo_color = Color.white


func _on_RightController_button_pressed(button: int) -> void:
	print (\"Button pressed: \" + str(button))
	
	$ARVROrigin/RightController/RayCast/MeshInstance.mesh.material.albedo_color = Color.black
	
	if $ARVROrigin/RightController/RayCast.is_colliding():
		$ARVROrigin/RightController/RayCast/MeshInstance.mesh.material.albedo_color = Color.yellow
		var colliding_object = $ARVROrigin/RightController/RayCast.get_collider() # Gets the correct object
		
		colliding_object.is_clicked()
 
func _on_RightController_button_release(button: int) -> void:
	print (\"Button release: \" + str(button))
	$ARVROrigin/RightController/RayCast/MeshInstance.mesh.material.albedo_color = Color.white


func _process(delta: float) -> void:
	var left_controller_id = 100
	
	var thumbstick_x_axis_id = 2
	var thumbstick_y_axis_id = 3
 
	var thumbstick_vector := Vector2(
		Input.get_joy_axis(left_controller_id, thumbstick_x_axis_id),
		Input.get_joy_axis(left_controller_id, thumbstick_y_axis_id))
 
	if thumbstick_vector != Vector2.ZERO:
		print (\"Left thumbstick position: \" + str(thumbstick_vector))
 
func _webxr_on_select(controller_id: int) -> void:
	print(\"Select: \" + str(controller_id))
 
	var controller: ARVRPositionalTracker = webxr_interface.get_controller(controller_id)
	print (controller.get_orientation())
	print (controller.get_position())
 
func _webxr_on_select_start(controller_id: int) -> void:
	print(\"Select Start: \" + str(controller_id))
		
 
func _webxr_on_select_end(controller_id: int) -> void:
	print(\"Select End: \" + str(controller_id))
 
func _webxr_on_squeeze(controller_id: int) -> void:
	print(\"Squeeze: \" + str(controller_id))
 
func _webxr_on_squeeze_start(controller_id: int) -> void:
	print(\"Squeeze Start: \" + str(controller_id))
 
func _webxr_on_squeeze_end(controller_id: int) -> void:
	print(\"Squeeze End: \" + str(controller_id))


func _on_LoginButton_login_button():
	$LoginScreen.hide()
	$LoginScreen/LoginButton/CollisionShape.disabled = true
	
	$Browser.show()
	
	$Browser/App/CollisionShape.disabled = false
	$Browser/App2/CollisionShape.disabled = false
	
	$ToolBar/HomeButton/CollisionShape.disabled = false
	$ToolBar.show()

func _on_App_enter_app():
	$Browser.hide()
	$Browser/App/CollisionShape.disabled = true
	$Browser/App2/CollisionShape.disabled = true
	$AppOpened.show()
	
func _on_App2_enter_app():
	$Browser.hide()
	$Browser/App/CollisionShape.disabled = true
	$Browser/App2/CollisionShape.disabled = true
	$AppOpened2.show()

func _on_ToolBar_home_button():
	$AppOpened.hide()
	$AppOpened2.hide()
	$Browser/App/CollisionShape.disabled = false
	$Browser/App2/CollisionShape.disabled = false
	$Browser.show()

onready var hand_button = false

func _on_HandButton_hand_button():
	if hand_button == false:
		hand_button = true
		$ARVROrigin/LeftController/HandButton/HandScreen.show()
		$ARVROrigin/LeftController/HandButton/HandScreen/CarButton/CollisionShape.disabled = false
	else:
		hand_button = false
		$ARVROrigin/LeftController/HandButton/HandScreen.hide()
		$ARVROrigin/LeftController/HandButton/HandScreen/CarButton/CollisionShape.disabled = true
"

[sub_resource type="SpatialMaterial" id=8]

[sub_resource type="CubeMesh" id=2]
material = SubResource( 8 )
size = Vector3( 0.12, 0.12, 0.12 )

[sub_resource type="ConcavePolygonShape" id=36]
data = PoolVector3Array( -0.06, 0.06, 0.06, 0.06, 0.06, 0.06, -0.06, -0.06, 0.06, 0.06, 0.06, 0.06, 0.06, -0.06, 0.06, -0.06, -0.06, 0.06, 0.06, 0.06, -0.06, -0.06, 0.06, -0.06, 0.06, -0.06, -0.06, -0.06, 0.06, -0.06, -0.06, -0.06, -0.06, 0.06, -0.06, -0.06, 0.06, 0.06, 0.06, 0.06, 0.06, -0.06, 0.06, -0.06, 0.06, 0.06, 0.06, -0.06, 0.06, -0.06, -0.06, 0.06, -0.06, 0.06, -0.06, 0.06, -0.06, -0.06, 0.06, 0.06, -0.06, -0.06, -0.06, -0.06, 0.06, 0.06, -0.06, -0.06, 0.06, -0.06, -0.06, -0.06, 0.06, 0.06, 0.06, -0.06, 0.06, 0.06, 0.06, 0.06, -0.06, -0.06, 0.06, 0.06, -0.06, 0.06, -0.06, 0.06, 0.06, -0.06, -0.06, -0.06, 0.06, 0.06, -0.06, 0.06, -0.06, -0.06, -0.06, 0.06, -0.06, 0.06, 0.06, -0.06, -0.06, -0.06, -0.06, -0.06 )

[sub_resource type="CubeMesh" id=37]
size = Vector3( 0.01, 0.3, 0.3 )

[sub_resource type="ConcavePolygonShape" id=38]
data = PoolVector3Array( -0.005, 0.15, 0.15, 0.005, 0.15, 0.15, -0.005, -0.15, 0.15, 0.005, 0.15, 0.15, 0.005, -0.15, 0.15, -0.005, -0.15, 0.15, 0.005, 0.15, -0.15, -0.005, 0.15, -0.15, 0.005, -0.15, -0.15, -0.005, 0.15, -0.15, -0.005, -0.15, -0.15, 0.005, -0.15, -0.15, 0.005, 0.15, 0.15, 0.005, 0.15, -0.15, 0.005, -0.15, 0.15, 0.005, 0.15, -0.15, 0.005, -0.15, -0.15, 0.005, -0.15, 0.15, -0.005, 0.15, -0.15, -0.005, 0.15, 0.15, -0.005, -0.15, -0.15, -0.005, 0.15, 0.15, -0.005, -0.15, 0.15, -0.005, -0.15, -0.15, 0.005, 0.15, 0.15, -0.005, 0.15, 0.15, 0.005, 0.15, -0.15, -0.005, 0.15, 0.15, -0.005, 0.15, -0.15, 0.005, 0.15, -0.15, -0.005, -0.15, 0.15, 0.005, -0.15, 0.15, -0.005, -0.15, -0.15, 0.005, -0.15, 0.15, 0.005, -0.15, -0.15, -0.005, -0.15, -0.15 )

[sub_resource type="SpatialMaterial" id=40]
albedo_color = Color( 0.494118, 0.494118, 0.494118, 1 )

[sub_resource type="CubeMesh" id=39]
material = SubResource( 40 )
size = Vector3( 0.012, 0.15, 0.15 )

[sub_resource type="ConcavePolygonShape" id=41]
data = PoolVector3Array( -0.006, 0.075, 0.075, 0.006, 0.075, 0.075, -0.006, -0.075, 0.075, 0.006, 0.075, 0.075, 0.006, -0.075, 0.075, -0.006, -0.075, 0.075, 0.006, 0.075, -0.075, -0.006, 0.075, -0.075, 0.006, -0.075, -0.075, -0.006, 0.075, -0.075, -0.006, -0.075, -0.075, 0.006, -0.075, -0.075, 0.006, 0.075, 0.075, 0.006, 0.075, -0.075, 0.006, -0.075, 0.075, 0.006, 0.075, -0.075, 0.006, -0.075, -0.075, 0.006, -0.075, 0.075, -0.006, 0.075, -0.075, -0.006, 0.075, 0.075, -0.006, -0.075, -0.075, -0.006, 0.075, 0.075, -0.006, -0.075, 0.075, -0.006, -0.075, -0.075, 0.006, 0.075, 0.075, -0.006, 0.075, 0.075, 0.006, 0.075, -0.075, -0.006, 0.075, 0.075, -0.006, 0.075, -0.075, 0.006, 0.075, -0.075, -0.006, -0.075, 0.075, 0.006, -0.075, 0.075, -0.006, -0.075, -0.075, 0.006, -0.075, 0.075, 0.006, -0.075, -0.075, -0.006, -0.075, -0.075 )

[sub_resource type="SpatialMaterial" id=9]

[sub_resource type="CubeMesh" id=4]
material = SubResource( 9 )
size = Vector3( 0.01, 0.01, 4 )

[sub_resource type="CubeMesh" id=3]
size = Vector3( 0.12, 0.12, 0.12 )

[sub_resource type="SpatialMaterial" id=42]

[sub_resource type="CubeMesh" id=35]
material = SubResource( 42 )
size = Vector3( 0.01, 0.01, 4 )

[sub_resource type="CubeMesh" id=20]
size = Vector3( 2, 1, 0.01 )

[sub_resource type="ConcavePolygonShape" id=21]
data = PoolVector3Array( -1, 0.5, 0.005, 1, 0.5, 0.005, -1, -0.5, 0.005, 1, 0.5, 0.005, 1, -0.5, 0.005, -1, -0.5, 0.005, 1, 0.5, -0.005, -1, 0.5, -0.005, 1, -0.5, -0.005, -1, 0.5, -0.005, -1, -0.5, -0.005, 1, -0.5, -0.005, 1, 0.5, 0.005, 1, 0.5, -0.005, 1, -0.5, 0.005, 1, 0.5, -0.005, 1, -0.5, -0.005, 1, -0.5, 0.005, -1, 0.5, -0.005, -1, 0.5, 0.005, -1, -0.5, -0.005, -1, 0.5, 0.005, -1, -0.5, 0.005, -1, -0.5, -0.005, 1, 0.5, 0.005, -1, 0.5, 0.005, 1, 0.5, -0.005, -1, 0.5, 0.005, -1, 0.5, -0.005, 1, 0.5, -0.005, -1, -0.5, 0.005, 1, -0.5, 0.005, -1, -0.5, -0.005, 1, -0.5, 0.005, 1, -0.5, -0.005, -1, -0.5, -0.005 )

[sub_resource type="SpatialMaterial" id=32]
albedo_color = Color( 0.494118, 0.494118, 0.494118, 1 )

[sub_resource type="CubeMesh" id=33]
material = SubResource( 32 )
size = Vector3( 1, 0.3, 0.012 )

[sub_resource type="ConcavePolygonShape" id=34]
data = PoolVector3Array( -0.5, 0.15, 0.006, 0.5, 0.15, 0.006, -0.5, -0.15, 0.006, 0.5, 0.15, 0.006, 0.5, -0.15, 0.006, -0.5, -0.15, 0.006, 0.5, 0.15, -0.006, -0.5, 0.15, -0.006, 0.5, -0.15, -0.006, -0.5, 0.15, -0.006, -0.5, -0.15, -0.006, 0.5, -0.15, -0.006, 0.5, 0.15, 0.006, 0.5, 0.15, -0.006, 0.5, -0.15, 0.006, 0.5, 0.15, -0.006, 0.5, -0.15, -0.006, 0.5, -0.15, 0.006, -0.5, 0.15, -0.006, -0.5, 0.15, 0.006, -0.5, -0.15, -0.006, -0.5, 0.15, 0.006, -0.5, -0.15, 0.006, -0.5, -0.15, -0.006, 0.5, 0.15, 0.006, -0.5, 0.15, 0.006, 0.5, 0.15, -0.006, -0.5, 0.15, 0.006, -0.5, 0.15, -0.006, 0.5, 0.15, -0.006, -0.5, -0.15, 0.006, 0.5, -0.15, 0.006, -0.5, -0.15, -0.006, 0.5, -0.15, 0.006, 0.5, -0.15, -0.006, -0.5, -0.15, -0.006 )

[sub_resource type="CubeMesh" id=1]
size = Vector3( 4, 2, 0.01 )

[sub_resource type="ConcavePolygonShape" id=13]
data = PoolVector3Array( -2, 1, 0.005, 2, 1, 0.005, -2, -1, 0.005, 2, 1, 0.005, 2, -1, 0.005, -2, -1, 0.005, 2, 1, -0.005, -2, 1, -0.005, 2, -1, -0.005, -2, 1, -0.005, -2, -1, -0.005, 2, -1, -0.005, 2, 1, 0.005, 2, 1, -0.005, 2, -1, 0.005, 2, 1, -0.005, 2, -1, -0.005, 2, -1, 0.005, -2, 1, -0.005, -2, 1, 0.005, -2, -1, -0.005, -2, 1, 0.005, -2, -1, 0.005, -2, -1, -0.005, 2, 1, 0.005, -2, 1, 0.005, 2, 1, -0.005, -2, 1, 0.005, -2, 1, -0.005, 2, 1, -0.005, -2, -1, 0.005, 2, -1, 0.005, -2, -1, -0.005, 2, -1, 0.005, 2, -1, -0.005, -2, -1, -0.005 )

[sub_resource type="SpatialMaterial" id=22]
albedo_color = Color( 1, 0.670588, 0.670588, 1 )

[sub_resource type="CubeMesh" id=5]
material = SubResource( 22 )
size = Vector3( 0.8, 0.8, 0.1 )

[sub_resource type="ConcavePolygonShape" id=27]
data = PoolVector3Array( -0.4, 0.4, 0.05, 0.4, 0.4, 0.05, -0.4, -0.4, 0.05, 0.4, 0.4, 0.05, 0.4, -0.4, 0.05, -0.4, -0.4, 0.05, 0.4, 0.4, -0.05, -0.4, 0.4, -0.05, 0.4, -0.4, -0.05, -0.4, 0.4, -0.05, -0.4, -0.4, -0.05, 0.4, -0.4, -0.05, 0.4, 0.4, 0.05, 0.4, 0.4, -0.05, 0.4, -0.4, 0.05, 0.4, 0.4, -0.05, 0.4, -0.4, -0.05, 0.4, -0.4, 0.05, -0.4, 0.4, -0.05, -0.4, 0.4, 0.05, -0.4, -0.4, -0.05, -0.4, 0.4, 0.05, -0.4, -0.4, 0.05, -0.4, -0.4, -0.05, 0.4, 0.4, 0.05, -0.4, 0.4, 0.05, 0.4, 0.4, -0.05, -0.4, 0.4, 0.05, -0.4, 0.4, -0.05, 0.4, 0.4, -0.05, -0.4, -0.4, 0.05, 0.4, -0.4, 0.05, -0.4, -0.4, -0.05, 0.4, -0.4, 0.05, 0.4, -0.4, -0.05, -0.4, -0.4, -0.05 )

[sub_resource type="SpatialMaterial" id=23]
albedo_color = Color( 1, 0.972549, 0.294118, 1 )

[sub_resource type="CubeMesh" id=24]
material = SubResource( 23 )
size = Vector3( 0.8, 0.8, 0.1 )

[sub_resource type="ConcavePolygonShape" id=28]
data = PoolVector3Array( -0.4, 0.4, 0.05, 0.4, 0.4, 0.05, -0.4, -0.4, 0.05, 0.4, 0.4, 0.05, 0.4, -0.4, 0.05, -0.4, -0.4, 0.05, 0.4, 0.4, -0.05, -0.4, 0.4, -0.05, 0.4, -0.4, -0.05, -0.4, 0.4, -0.05, -0.4, -0.4, -0.05, 0.4, -0.4, -0.05, 0.4, 0.4, 0.05, 0.4, 0.4, -0.05, 0.4, -0.4, 0.05, 0.4, 0.4, -0.05, 0.4, -0.4, -0.05, 0.4, -0.4, 0.05, -0.4, 0.4, -0.05, -0.4, 0.4, 0.05, -0.4, -0.4, -0.05, -0.4, 0.4, 0.05, -0.4, -0.4, 0.05, -0.4, -0.4, -0.05, 0.4, 0.4, 0.05, -0.4, 0.4, 0.05, 0.4, 0.4, -0.05, -0.4, 0.4, 0.05, -0.4, 0.4, -0.05, 0.4, 0.4, -0.05, -0.4, -0.4, 0.05, 0.4, -0.4, 0.05, -0.4, -0.4, -0.05, 0.4, -0.4, 0.05, 0.4, -0.4, -0.05, -0.4, -0.4, -0.05 )

[sub_resource type="SpatialMaterial" id=11]
albedo_color = Color( 1, 0.552941, 0.552941, 1 )

[sub_resource type="CubeMesh" id=12]
material = SubResource( 11 )
size = Vector3( 4, 2, 0.01 )

[sub_resource type="ConcavePolygonShape" id=29]
data = PoolVector3Array( -2, 1, 0.005, 2, 1, 0.005, -2, -1, 0.005, 2, 1, 0.005, 2, -1, 0.005, -2, -1, 0.005, 2, 1, -0.005, -2, 1, -0.005, 2, -1, -0.005, -2, 1, -0.005, -2, -1, -0.005, 2, -1, -0.005, 2, 1, 0.005, 2, 1, -0.005, 2, -1, 0.005, 2, 1, -0.005, 2, -1, -0.005, 2, -1, 0.005, -2, 1, -0.005, -2, 1, 0.005, -2, -1, -0.005, -2, 1, 0.005, -2, -1, 0.005, -2, -1, -0.005, 2, 1, 0.005, -2, 1, 0.005, 2, 1, -0.005, -2, 1, 0.005, -2, 1, -0.005, 2, 1, -0.005, -2, -1, 0.005, 2, -1, 0.005, -2, -1, -0.005, 2, -1, 0.005, 2, -1, -0.005, -2, -1, -0.005 )

[sub_resource type="SpatialMaterial" id=25]
albedo_color = Color( 0.960784, 0.94902, 0.239216, 1 )

[sub_resource type="CubeMesh" id=26]
material = SubResource( 25 )
size = Vector3( 4, 2, 0.01 )

[sub_resource type="ConcavePolygonShape" id=30]
data = PoolVector3Array( -2, 1, 0.005, 2, 1, 0.005, -2, -1, 0.005, 2, 1, 0.005, 2, -1, 0.005, -2, -1, 0.005, 2, 1, -0.005, -2, 1, -0.005, 2, -1, -0.005, -2, 1, -0.005, -2, -1, -0.005, 2, -1, -0.005, 2, 1, 0.005, 2, 1, -0.005, 2, -1, 0.005, 2, 1, -0.005, 2, -1, -0.005, 2, -1, 0.005, -2, 1, -0.005, -2, 1, 0.005, -2, -1, -0.005, -2, 1, 0.005, -2, -1, 0.005, -2, -1, -0.005, 2, 1, 0.005, -2, 1, 0.005, 2, 1, -0.005, -2, 1, 0.005, -2, 1, -0.005, 2, 1, -0.005, -2, -1, 0.005, 2, -1, 0.005, -2, -1, -0.005, 2, -1, 0.005, 2, -1, -0.005, -2, -1, -0.005 )

[sub_resource type="SpatialMaterial" id=15]
albedo_color = Color( 0.494118, 0.494118, 0.494118, 1 )

[sub_resource type="CubeMesh" id=16]
material = SubResource( 15 )
size = Vector3( 4, 0.5, 0.01 )

[sub_resource type="ConcavePolygonShape" id=17]
data = PoolVector3Array( -2, 0.25, 0.005, 2, 0.25, 0.005, -2, -0.25, 0.005, 2, 0.25, 0.005, 2, -0.25, 0.005, -2, -0.25, 0.005, 2, 0.25, -0.005, -2, 0.25, -0.005, 2, -0.25, -0.005, -2, 0.25, -0.005, -2, -0.25, -0.005, 2, -0.25, -0.005, 2, 0.25, 0.005, 2, 0.25, -0.005, 2, -0.25, 0.005, 2, 0.25, -0.005, 2, -0.25, -0.005, 2, -0.25, 0.005, -2, 0.25, -0.005, -2, 0.25, 0.005, -2, -0.25, -0.005, -2, 0.25, 0.005, -2, -0.25, 0.005, -2, -0.25, -0.005, 2, 0.25, 0.005, -2, 0.25, 0.005, 2, 0.25, -0.005, -2, 0.25, 0.005, -2, 0.25, -0.005, 2, 0.25, -0.005, -2, -0.25, 0.005, 2, -0.25, 0.005, -2, -0.25, -0.005, 2, -0.25, 0.005, 2, -0.25, -0.005, -2, -0.25, -0.005 )

[sub_resource type="CubeMesh" id=18]
size = Vector3( 0.4, 0.4, 0.02 )

[sub_resource type="ConcavePolygonShape" id=19]
data = PoolVector3Array( -0.2, 0.2, 0.01, 0.2, 0.2, 0.01, -0.2, -0.2, 0.01, 0.2, 0.2, 0.01, 0.2, -0.2, 0.01, -0.2, -0.2, 0.01, 0.2, 0.2, -0.01, -0.2, 0.2, -0.01, 0.2, -0.2, -0.01, -0.2, 0.2, -0.01, -0.2, -0.2, -0.01, 0.2, -0.2, -0.01, 0.2, 0.2, 0.01, 0.2, 0.2, -0.01, 0.2, -0.2, 0.01, 0.2, 0.2, -0.01, 0.2, -0.2, -0.01, 0.2, -0.2, 0.01, -0.2, 0.2, -0.01, -0.2, 0.2, 0.01, -0.2, -0.2, -0.01, -0.2, 0.2, 0.01, -0.2, -0.2, 0.01, -0.2, -0.2, -0.01, 0.2, 0.2, 0.01, -0.2, 0.2, 0.01, 0.2, 0.2, -0.01, -0.2, 0.2, 0.01, -0.2, 0.2, -0.01, 0.2, 0.2, -0.01, -0.2, -0.2, 0.01, 0.2, -0.2, 0.01, -0.2, -0.2, -0.01, 0.2, -0.2, 0.01, 0.2, -0.2, -0.01, -0.2, -0.2, -0.01 )

[sub_resource type="SpatialMaterial" id=43]
albedo_color = Color( 0.137255, 0.137255, 0.137255, 1 )

[sub_resource type="CubeMesh" id=44]
material = SubResource( 43 )
size = Vector3( 6, 0.1, 50 )

[sub_resource type="CubeMesh" id=45]
size = Vector3( 0.1, 0.11, 50 )

[node name="Main" type="Spatial"]
script = SubResource( 31 )

[node name="ARVROrigin" type="ARVROrigin" parent="."]

[node name="ARVRCamera" type="ARVRCamera" parent="ARVROrigin"]

[node name="LeftController" type="ARVRController" parent="ARVROrigin"]

[node name="HandButton" type="StaticBody" parent="ARVROrigin/LeftController"]
script = ExtResource( 5 )

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/LeftController/HandButton"]
mesh = SubResource( 2 )
skeleton = NodePath("../..")
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ARVROrigin/LeftController/HandButton"]
shape = SubResource( 36 )

[node name="HandScreen" type="StaticBody" parent="ARVROrigin/LeftController/HandButton"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.227214, 0 )
visible = false

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/LeftController/HandButton/HandScreen"]
mesh = SubResource( 37 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ARVROrigin/LeftController/HandButton/HandScreen"]
shape = SubResource( 38 )

[node name="CarButton" type="StaticBody" parent="ARVROrigin/LeftController/HandButton/HandScreen"]

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/LeftController/HandButton/HandScreen/CarButton"]
mesh = SubResource( 39 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ARVROrigin/LeftController/HandButton/HandScreen/CarButton"]
shape = SubResource( 41 )
disabled = true

[node name="RayCast" type="RayCast" parent="ARVROrigin/LeftController"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.0702074 )
enabled = true
cast_to = Vector3( 0, 0, -4 )

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/LeftController/RayCast"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -2 )
mesh = SubResource( 4 )
material/0 = null

[node name="RightController" type="ARVRController" parent="ARVROrigin"]
controller_id = 2

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/RightController"]
mesh = SubResource( 3 )
material/0 = null

[node name="RayCast" type="RayCast" parent="ARVROrigin/RightController"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.07 )
enabled = true
cast_to = Vector3( 0, 0, -4 )

[node name="MeshInstance" type="MeshInstance" parent="ARVROrigin/RightController/RayCast"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -2 )
mesh = SubResource( 35 )
material/0 = null

[node name="LoginScreen" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -3 )

[node name="MeshInstance" type="MeshInstance" parent="LoginScreen"]
mesh = SubResource( 20 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="LoginScreen"]
shape = SubResource( 21 )

[node name="LoginButton" type="StaticBody" parent="LoginScreen"]
script = ExtResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="LoginScreen/LoginButton"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.263522, 0 )
mesh = SubResource( 33 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="LoginScreen/LoginButton"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.263522, 0 )
shape = SubResource( 34 )

[node name="Browser" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -3 )
visible = false

[node name="MeshInstance" type="MeshInstance" parent="Browser"]
mesh = SubResource( 1 )
skeleton = NodePath("../../ARVROrigin/ARVRCamera")
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Browser"]
shape = SubResource( 13 )

[node name="App" type="StaticBody" parent="Browser"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0.5, 0 )
script = ExtResource( 2 )

[node name="AppBox" type="MeshInstance" parent="Browser/App"]
mesh = SubResource( 5 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Browser/App"]
shape = SubResource( 27 )
disabled = true

[node name="App2" type="StaticBody" parent="Browser"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0.5, 0 )
script = ExtResource( 4 )

[node name="AppBox" type="MeshInstance" parent="Browser/App2"]
mesh = SubResource( 24 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Browser/App2"]
shape = SubResource( 28 )
disabled = true

[node name="AppOpened" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -3 )
visible = false

[node name="MeshInstance" type="MeshInstance" parent="AppOpened"]
mesh = SubResource( 12 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="AppOpened"]
shape = SubResource( 29 )

[node name="AppOpened2" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -3 )
visible = false

[node name="MeshInstance" type="MeshInstance" parent="AppOpened2"]
mesh = SubResource( 26 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="AppOpened2"]
shape = SubResource( 30 )

[node name="ToolBar" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 0.91976, 0.392482, 0, -0.392482, 0.91976, 0, 0.261299, -2.90239 )
visible = false

[node name="MeshInstance" type="MeshInstance" parent="ToolBar"]
mesh = SubResource( 16 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ToolBar"]
shape = SubResource( 17 )

[node name="HomeButton" type="StaticBody" parent="ToolBar"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.75, 0, 0 )
script = ExtResource( 3 )

[node name="MeshInstance" type="MeshInstance" parent="ToolBar/HomeButton"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 18 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ToolBar/HomeButton"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
shape = SubResource( 19 )
disabled = true

[node name="Street" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.05, 0 )

[node name="MeshAsphalt" type="MeshInstance" parent="Street"]
mesh = SubResource( 44 )
material/0 = null

[node name="MeshWhiteLine" type="MeshInstance" parent="Street"]
mesh = SubResource( 45 )
material/0 = null

[node name="Button" type="Button" parent="."]
margin_left = 285.0
margin_top = 257.0
margin_right = 474.0
margin_bottom = 304.0
text = "Enter VR"
__meta__ = {
"_edit_use_anchors_": false
}
